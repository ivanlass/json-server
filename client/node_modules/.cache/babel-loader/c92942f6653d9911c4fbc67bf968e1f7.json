{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Documents/projekti2/sim-test/client/src/Components/TabAdmin.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport axios from \"axios\";\nimport CardAdmin from \"../Components/CardAdmin\";\nimport Dialog from \"../Components/Dialog\";\nimport EnrollDecide from \"./EnrollDecide\";\nimport NewTrial from \"./NewTrial\";\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(Typography, Object.assign({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `nav-tabpanel-${index}`,\n    \"aria-labelledby\": `nav-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 27\n    }\n  }, children));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    \"aria-controls\": `nav-tabpanel-${index}`\n  };\n}\n\nfunction LinkTab(props) {\n  return /*#__PURE__*/React.createElement(Tab, Object.assign({\n    component: \"a\",\n    onClick: event => {\n      event.preventDefault();\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }));\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function NavTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [trials, setTrials] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [trialForEdit, setTrialForEdit] = useState({});\n  const [enrollment, setEnrollment] = useState({});\n  const [user, setUser] = useState({});\n\n  const fetch = async (url, sets) => {\n    const result = await axios(url);\n    sets(result.data);\n  }; //Fetch trials and enrollments\n\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/Trial\", setTrials);\n    fetch(\"http://localhost:3000/Enrollment\", setEnrollment);\n    fetch(\"http://localhost:3000/User\", setUser);\n  }, []); //fetch enrollment data again after submiting in EnrollDecide.js\n\n  const getEnrollment = () => {\n    console.log(\"asd\");\n  }; //Open modal and fetch trial obj with editable data and store in @trialForEdit\n\n\n  const handleClickOpen = e => {\n    const trial = e.currentTarget.dataset;\n    const edit = {\n      id: parseInt(trial.id),\n      name: trial.name,\n      startDate: trial.startdate,\n      endDate: trial.enddate,\n      registrationStartDate: trial.registrationstartdate,\n      registrationEndDate: trial.registrationenddate,\n      maxPartipants: parseInt(trial.maxpartipants),\n      priceInEUR: parseInt(trial.priceineur)\n    };\n    setTrialForEdit(edit);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    variant: \"fullWidth\",\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"nav tabs example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LinkTab, Object.assign({\n    label: \"all trials\",\n    href: \"/drafts\"\n  }, a11yProps(0), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(LinkTab, Object.assign({\n    label: \"pending enrollments\",\n    href: \"/trash\"\n  }, a11yProps(1), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(LinkTab, Object.assign({\n    label: \"New Trial\",\n    href: \"/trash\"\n  }, a11yProps(2), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, trials.map(trial => {\n    return /*#__PURE__*/React.createElement(CardAdmin, {\n      key: trial.id,\n      trial: trial,\n      handleClickOpen: handleClickOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    trial: trialForEdit,\n    handleClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(EnrollDecide, {\n    getEnrollment: getEnrollment,\n    trial: trials,\n    user: user,\n    enrollment: enrollment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NewTrial, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/ivan/Documents/projekti2/sim-test/client/src/Components/TabAdmin.js"],"names":["React","useState","useEffect","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","Box","axios","CardAdmin","Dialog","EnrollDecide","NewTrial","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","LinkTab","event","preventDefault","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","NavTabs","classes","setValue","trials","setTrials","open","setOpen","trialForEdit","setTrialForEdit","enrollment","setEnrollment","user","setUser","fetch","url","sets","result","data","getEnrollment","console","log","handleClickOpen","e","trial","currentTarget","dataset","edit","parseInt","name","startDate","startdate","endDate","enddate","registrationStartDate","registrationstartdate","registrationEndDate","registrationenddate","maxPartipants","maxpartipants","priceInEUR","priceineur","handleClose","handleChange","newValue","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport axios from \"axios\";\nimport CardAdmin from \"../Components/CardAdmin\";\nimport Dialog from \"../Components/Dialog\";\nimport EnrollDecide from \"./EnrollDecide\";\nimport NewTrial from \"./NewTrial\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    \"aria-controls\": `nav-tabpanel-${index}`,\n  };\n}\n\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={(event) => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function NavTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [trials, setTrials] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [trialForEdit, setTrialForEdit] = useState({});\n  const [enrollment, setEnrollment] = useState({});\n  const [user, setUser] = useState({});\n\n  const fetch = async (url, sets) => {\n    const result = await axios(url);\n    sets(result.data);\n  };\n\n  //Fetch trials and enrollments\n  useEffect(() => {\n    fetch(\"http://localhost:3000/Trial\", setTrials);\n    fetch(\"http://localhost:3000/Enrollment\", setEnrollment);\n    fetch(\"http://localhost:3000/User\", setUser);\n  }, []);\n\n  //fetch enrollment data again after submiting in EnrollDecide.js\n  const getEnrollment = () => {\n    console.log(\"asd\");\n  };\n\n  //Open modal and fetch trial obj with editable data and store in @trialForEdit\n  const handleClickOpen = (e) => {\n    const trial = e.currentTarget.dataset;\n    const edit = {\n      id: parseInt(trial.id),\n      name: trial.name,\n      startDate: trial.startdate,\n      endDate: trial.enddate,\n      registrationStartDate: trial.registrationstartdate,\n      registrationEndDate: trial.registrationenddate,\n      maxPartipants: parseInt(trial.maxpartipants),\n      priceInEUR: parseInt(trial.priceineur),\n    };\n    setTrialForEdit(edit);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Tabs\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleChange}\n          aria-label=\"nav tabs example\"\n        >\n          <LinkTab label=\"all trials\" href=\"/drafts\" {...a11yProps(0)} />\n          <LinkTab\n            label=\"pending enrollments\"\n            href=\"/trash\"\n            {...a11yProps(1)}\n          />\n          <LinkTab label=\"New Trial\" href=\"/trash\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        {trials.map((trial) => {\n          return (\n            <CardAdmin\n              key={trial.id}\n              trial={trial}\n              handleClickOpen={handleClickOpen}\n            />\n          );\n        })}\n        <Dialog open={open} trial={trialForEdit} handleClose={handleClose} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <EnrollDecide getEnrollment={getEnrollment} trial={trials} user={user} enrollment={enrollment} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <NewTrial />\n      </TabPanel>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}