{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios'; // const useFetch =(url) => {\n//     const fetch = async () => {\n//       const result = await axios(url);\n//       return result.data\n//     };\n//   };\n\nexport const useFetch = (url, options) => {\n  const [response, setResponse] = React.useState(null);\n  const [error, setError] = React.useState(null);\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(url, options);\n        const json = await res.json();\n        setResponse(json);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return {\n    response,\n    error\n  };\n};","map":{"version":3,"sources":["/home/ivan/Documents/projekti2/sim-test/client/src/hooks/useFetch.js"],"names":["useState","useEffect","axios","useFetch","url","options","response","setResponse","React","error","setError","fetchData","res","fetch","json"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;AACA;AACA;AACA;AACA;AAEA;;AAGA,OAAO,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,KAAK,CAACR,QAAN,CAAe,IAAf,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBF,KAAK,CAACR,QAAN,CAAe,IAAf,CAA1B;AACAQ,EAAAA,KAAK,CAACP,SAAN,CAAgB,MAAM;AACpB,UAAMU,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMC,KAAK,CAACT,GAAD,EAAMC,OAAN,CAAvB;AACA,cAAMS,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACAP,QAAAA,WAAW,CAACO,IAAD,CAAX;AACD,OAJD,CAIE,OAAOL,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,KARD;;AASAE,IAAAA,SAAS;AACV,GAXD,EAWG,EAXH;AAYA,SAAO;AAAEL,IAAAA,QAAF;AAAYG,IAAAA;AAAZ,GAAP;AACD,CAhBI","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\n// const useFetch =(url) => {\n//     const fetch = async () => {\n//       const result = await axios(url);\n//       return result.data\n//     };\n\n//   };\n\n\nexport const useFetch = (url, options) => {\n    const [response, setResponse] = React.useState(null);\n    const [error, setError] = React.useState(null);\n    React.useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const res = await fetch(url, options);\n          const json = await res.json();\n          setResponse(json);\n        } catch (error) {\n          setError(error);\n        }\n      };\n      fetchData();\n    }, []);\n    return { response, error };\n  };\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}