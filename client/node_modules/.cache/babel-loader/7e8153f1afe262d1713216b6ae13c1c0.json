{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Documents/projekti2/sim-test/client/src/Components/TrialList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from './Card';\n\nfunction TrialList(props) {\n  const [trials, setTrials] = useState([]);\n  const [enrollment, setEnrollment] = useState([]);\n  const [enrolled, setEnrolled] = useState([]);\n\n  const fetch = async (url, sets) => {\n    const result = await axios(url);\n    sets(result.data);\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/Trial\", setTrials);\n    fetch(\"http://localhost:3000/Enrollment\", setEnrollment);\n  }, []);\n  let enrolledUsers = [];\n\n  for (let index = 0; index < enrollment.length; index++) {\n    if (enrollment[index].userId === props.user) {\n      enrolledUsers.push(enrollment[index]);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }, enrolledUsers && console.log(enrolledUsers), trials.map(trial => /*#__PURE__*/React.createElement(Card, Object.assign({\n    key: trial.id\n  }, trial, {\n    trialId: enrolled.trialId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default TrialList;","map":{"version":3,"sources":["/home/ivan/Documents/projekti2/sim-test/client/src/Components/TrialList.js"],"names":["React","useState","useEffect","axios","Card","TrialList","props","trials","setTrials","enrollment","setEnrollment","enrolled","setEnrolled","fetch","url","sets","result","data","enrolledUsers","index","length","userId","user","push","console","log","map","trial","id","trialId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;;AAGA,QAAMY,KAAK,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AAC/B,UAAMC,MAAM,GAAG,MAAMb,KAAK,CAACW,GAAD,CAA1B;AACAC,IAAAA,IAAI,CAACC,MAAM,CAACC,IAAR,CAAJ;AACD,GAHH;;AAOFf,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAAC,6BAAD,EAAgCL,SAAhC,CAAL;AACAK,IAAAA,KAAK,CAAC,kCAAD,EAAqCH,aAArC,CAAL;AACD,GAHQ,EAGN,EAHM,CAAT;AAKF,MAAIQ,aAAa,GAAG,EAApB;;AAEA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGV,UAAU,CAACW,MAAvC,EAA+CD,KAAK,EAApD,EAAwD;AAChD,QAAGV,UAAU,CAACU,KAAD,CAAV,CAAkBE,MAAlB,KAA6Bf,KAAK,CAACgB,IAAtC,EAA4C;AAC1CJ,MAAAA,aAAa,CAACK,IAAd,CAAmBd,UAAU,CAACU,KAAD,CAA7B;AACD;AACR;;AAIC,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJD,aAAa,IAAIM,OAAO,CAACC,GAAR,CAAYP,aAAZ,CADb,EAEFX,MAAM,CAACmB,GAAP,CAAWC,KAAK,iBACb,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAK,CAACC;AAAjB,KAAyBD,KAAzB;AAAgC,IAAA,OAAO,EAAEhB,QAAQ,CAACkB,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADH,CAFE,CAAP;AAUD;;AAED,eAAexB,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from './Card'\n\nfunction TrialList(props) {\n    const [trials, setTrials] = useState([])\n    const [enrollment, setEnrollment] = useState([]);\n    const [enrolled, setEnrolled] = useState([]);\n\n\n    const fetch = async (url, sets) => {\n        const result = await axios(url);\n        sets(result.data);\n      };\n\n\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/Trial\", setTrials);\n    fetch(\"http://localhost:3000/Enrollment\", setEnrollment);\n  }, []);\n \nlet enrolledUsers = []  \n\nfor (let index = 0; index < enrollment.length; index++) {\n        if(enrollment[index].userId === props.user ){\n          enrolledUsers.push(enrollment[index])\n        }\n}\n\n\n  \n  return <div>\n    {enrolledUsers && console.log(enrolledUsers)}\n      {trials.map(trial => (\n          <Card key={trial.id} {...trial} trialId={enrolled.trialId}/>\n          \n          ))}\n\n\n            \n  </div>;\n}\n\nexport default TrialList;\n"]},"metadata":{},"sourceType":"module"}