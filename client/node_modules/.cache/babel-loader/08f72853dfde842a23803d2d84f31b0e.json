{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Documents/projekti2/sim-test/client/src/Components/EnrollDecide.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n    marginTop: 80,\n    textAlign: \"center\"\n  }\n});\nexport default function EnrollDecide(props) {\n  const classes = useStyles();\n\n  const submitDecide = e => {\n    axios.put(`http://localhost:3000/Enrollment/${e.currentTarget.dataset.enrollid}/`, {\n      id: e.currentTarget.dataset.enrollid,\n      createdAt: e.currentTarget.dataset.created,\n      userId: e.currentTarget.dataset.user,\n      trialId: e.currentTarget.dataset.trialid,\n      status: e.currentTarget.value\n    }).then(resp => {\n      //get new enrollment called in TabAdmin.js getData()\n      props.getEnrollmentJSON(\"http://localhost:3000/Enrollment\", props.setEnrollment);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    size: \"small\",\n    \"aria-label\": \"a dense table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Trial\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, props.enrollment.map(enroll => {\n    if (enroll.status == \"pending\") {\n      const usrEmail = props.user.find(usr => usr.id === enroll.userId);\n      const trialName = props.trial.find(el => el.id === enroll.trialId);\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: trialName.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, trialName.name), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }\n      }, usrEmail.email), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      }, enroll.status), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        \"data-trialid\": enroll.trialId,\n        \"data-user\": enroll.userId,\n        \"data-created\": enroll.createdAt,\n        \"data-enrollid\": enroll.id,\n        onClick: submitDecide,\n        value: \"approved\",\n        size: \"small\",\n        variant: \"outlined\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, \"Approve\"), /*#__PURE__*/React.createElement(Button, {\n        \"data-trialid\": enroll.trialId,\n        \"data-user\": enroll.userId,\n        \"data-created\": enroll.createdAt,\n        \"data-enrollid\": enroll.id,\n        onClick: submitDecide,\n        value: \"cancelled\",\n        size: \"small\",\n        variant: \"outlined\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        \"data-trialid\": enroll.trialId,\n        \"data-user\": enroll.userId,\n        \"data-created\": enroll.createdAt,\n        \"data-enrollid\": enroll.id,\n        onClick: submitDecide,\n        value: \"rejected\",\n        size: \"small\",\n        variant: \"outlined\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, \"Reject\")));\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/ivan/Documents/projekti2/sim-test/client/src/Components/EnrollDecide.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","axios","useStyles","table","minWidth","marginTop","textAlign","EnrollDecide","props","classes","submitDecide","e","put","currentTarget","dataset","enrollid","id","createdAt","created","userId","user","trialId","trialid","status","value","then","resp","getEnrollmentJSON","setEnrollment","catch","error","console","log","enrollment","map","enroll","usrEmail","find","usr","trialName","trial","el","name","email"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAC;AAC3BU,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,GADL;AAELC,IAAAA,SAAS,EAAE,EAFN;AAGLC,IAAAA,SAAS,EAAE;AAHN;AADoB,CAAD,CAA5B;AAQA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,QAAMC,OAAO,GAAGP,SAAS,EAAzB;;AAEA,QAAMQ,YAAY,GAAIC,CAAD,IAAO;AAC1BV,IAAAA,KAAK,CACFW,GADH,CAEK,oCAAmCD,CAAC,CAACE,aAAF,CAAgBC,OAAhB,CAAwBC,QAAS,GAFzE,EAGI;AACEC,MAAAA,EAAE,EAAEL,CAAC,CAACE,aAAF,CAAgBC,OAAhB,CAAwBC,QAD9B;AAEEE,MAAAA,SAAS,EAAEN,CAAC,CAACE,aAAF,CAAgBC,OAAhB,CAAwBI,OAFrC;AAGEC,MAAAA,MAAM,EAAER,CAAC,CAACE,aAAF,CAAgBC,OAAhB,CAAwBM,IAHlC;AAIEC,MAAAA,OAAO,EAAEV,CAAC,CAACE,aAAF,CAAgBC,OAAhB,CAAwBQ,OAJnC;AAKEC,MAAAA,MAAM,EAAEZ,CAAC,CAACE,aAAF,CAAgBW;AAL1B,KAHJ,EAWGC,IAXH,CAWSC,IAAD,IAAU;AACd;AACAlB,MAAAA,KAAK,CAACmB,iBAAN,CACE,kCADF,EAEEnB,KAAK,CAACoB,aAFR;AAID,KAjBH,EAkBGC,KAlBH,CAkBUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KApBH;AAqBD,GAtBD;;AAwBA,sBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAErB,OAAO,CAACN,KAA1B;AAAiC,IAAA,IAAI,EAAC,OAAtC;AAA8C,kBAAW,eAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,CADF,eASE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,KAAK,CAACyB,UAAN,CAAiBC,GAAjB,CAAsBC,MAAD,IAAY;AAChC,QAAIA,MAAM,CAACZ,MAAP,IAAiB,SAArB,EAAgC;AAC9B,YAAMa,QAAQ,GAAG5B,KAAK,CAACY,IAAN,CAAWiB,IAAX,CACdC,GAAD,IAASA,GAAG,CAACtB,EAAJ,KAAWmB,MAAM,CAAChB,MADZ,CAAjB;AAGA,YAAMoB,SAAS,GAAG/B,KAAK,CAACgC,KAAN,CAAYH,IAAZ,CACfI,EAAD,IAAQA,EAAE,CAACzB,EAAH,KAAUmB,MAAM,CAACd,OADT,CAAlB;AAIA,0BACE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEkB,SAAS,CAACG,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BH,SAAS,CAACG,IAApC,CADF,eAEE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BN,QAAQ,CAACO,KAAnC,CAFF,eAGE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BR,MAAM,CAACZ,MAAjC,CAHF,eAIE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,wBAAcY,MAAM,CAACd,OADvB;AAEE,qBAAWc,MAAM,CAAChB,MAFpB;AAGE,wBAAcgB,MAAM,CAAClB,SAHvB;AAIE,yBAAekB,MAAM,CAACnB,EAJxB;AAKE,QAAA,OAAO,EAAEN,YALX;AAME,QAAA,KAAK,EAAC,UANR;AAOE,QAAA,IAAI,EAAC,OAPP;AAQE,QAAA,OAAO,EAAC,UARV;AASE,QAAA,KAAK,EAAC,SATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAcE,oBAAC,MAAD;AACE,wBAAcyB,MAAM,CAACd,OADvB;AAEE,qBAAWc,MAAM,CAAChB,MAFpB;AAGE,wBAAcgB,MAAM,CAAClB,SAHvB;AAIE,yBAAekB,MAAM,CAACnB,EAJxB;AAKE,QAAA,OAAO,EAAEN,YALX;AAME,QAAA,KAAK,EAAC,WANR;AAOE,QAAA,IAAI,EAAC,OAPP;AAQE,QAAA,OAAO,EAAC,UARV;AASE,QAAA,KAAK,EAAC,SATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,eA2BE,oBAAC,MAAD;AACE,wBAAcyB,MAAM,CAACd,OADvB;AAEE,qBAAWc,MAAM,CAAChB,MAFpB;AAGE,wBAAcgB,MAAM,CAAClB,SAHvB;AAIE,yBAAekB,MAAM,CAACnB,EAJxB;AAKE,QAAA,OAAO,EAAEN,YALX;AAME,QAAA,KAAK,EAAC,UANR;AAOE,QAAA,IAAI,EAAC,OAPP;AAQE,QAAA,OAAO,EAAC,UARV;AASE,QAAA,KAAK,EAAC,SATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3BF,CAJF,CADF;AAgDD;AACF,GA1DA,CADH,CATF,CADF,CADF;AA2ED","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n    marginTop: 80,\n    textAlign: \"center\",\n  },\n});\n\nexport default function EnrollDecide(props) {\n  const classes = useStyles();\n\n  const submitDecide = (e) => {\n    axios\n      .put(\n        `http://localhost:3000/Enrollment/${e.currentTarget.dataset.enrollid}/`,\n        {\n          id: e.currentTarget.dataset.enrollid,\n          createdAt: e.currentTarget.dataset.created,\n          userId: e.currentTarget.dataset.user,\n          trialId: e.currentTarget.dataset.trialid,\n          status: e.currentTarget.value,\n        }\n      )\n      .then((resp) => {\n        //get new enrollment called in TabAdmin.js getData()\n        props.getEnrollmentJSON(\n          \"http://localhost:3000/Enrollment\",\n          props.setEnrollment\n        );\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <TableContainer>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Email</TableCell>\n            <TableCell align=\"center\">Trial</TableCell>\n            <TableCell align=\"center\">Status</TableCell>\n            <TableCell align=\"center\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.enrollment.map((enroll) => {\n            if (enroll.status == \"pending\") {\n              const usrEmail = props.user.find(\n                (usr) => usr.id === enroll.userId\n              );\n              const trialName = props.trial.find(\n                (el) => el.id === enroll.trialId\n              );\n\n              return (\n                <TableRow key={trialName.name}>\n                  <TableCell align=\"right\">{trialName.name}</TableCell>\n                  <TableCell align=\"right\">{usrEmail.email}</TableCell>\n                  <TableCell align=\"right\">{enroll.status}</TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      data-trialid={enroll.trialId}\n                      data-user={enroll.userId}\n                      data-created={enroll.createdAt}\n                      data-enrollid={enroll.id}\n                      onClick={submitDecide}\n                      value=\"approved\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                      color=\"primary\"\n                    >\n                      Approve\n                    </Button>\n                    <Button\n                      data-trialid={enroll.trialId}\n                      data-user={enroll.userId}\n                      data-created={enroll.createdAt}\n                      data-enrollid={enroll.id}\n                      onClick={submitDecide}\n                      value=\"cancelled\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                      color=\"primary\"\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      data-trialid={enroll.trialId}\n                      data-user={enroll.userId}\n                      data-created={enroll.createdAt}\n                      data-enrollid={enroll.id}\n                      onClick={submitDecide}\n                      value=\"rejected\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                      color=\"primary\"\n                    >\n                      Reject\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            }\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}