{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Documents/projekti2/sim-test/client/src/Components/EditTrialForm.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport BasicDatePickers from \"./DatePicker\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport default function EditTrialForm(props) {\n  const [name, setName] = useState();\n  const [regStartDate, setRegStartDate] = useState();\n  const [regEndDate, setRegEndDate] = useState();\n  const classes = useStyles();\n\n  const getDate = (date, start) => {\n    date.toISOString();\n    date.toLocaleDateString();\n    const formatedDate = new Date(date).toLocaleDateString('fr-CA');\n\n    if (start) {\n      setRegStartDate(formatedDate);\n    } else setRegEndDate(formatedDate);\n  };\n\n  const submitEditForm = () => {\n    axios.put(`http://localhost:3000/trial/${props.trial.id}/`, {\n      id: props.trial.id,\n      name: name || props.trial.name,\n      startDate: props.trial.startDate,\n      endDate: props.trial.endDate,\n      registrationStartDate: regStartDate || props.trial.registrationStartDate,\n      registrationEndDate: regEndDate || props.trial.registrationEndDate,\n      maxPartipants: props.trial.maxPartipants,\n      priceInEUR: props.trial.priceInEUR\n    }).then(resp => {\n      console.log(resp.data);\n      props.getTrialJSON(\"http://localhost:3000/Trial\", props.setTrials);\n      props.handleClose();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    justify: \"space-around\",\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-secondary\",\n    label: props.trial.name,\n    value: name,\n    onChange: e => setName(e.target.value),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BasicDatePickers, {\n    starting: true,\n    label: \"Registration start date\",\n    trial: props.trial.registrationStartDate,\n    getDate: getDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BasicDatePickers, {\n    starting: false,\n    label: \"Registration end date\",\n    trial: props.trial.registrationEndDate,\n    getDate: getDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: props.handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: submitEditForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["/home/ivan/Documents/projekti2/sim-test/client/src/Components/EditTrialForm.js"],"names":["React","useState","makeStyles","TextField","BasicDatePickers","Grid","DialogActions","Button","axios","useStyles","theme","root","margin","spacing","EditTrialForm","props","name","setName","regStartDate","setRegStartDate","regEndDate","setRegEndDate","classes","getDate","date","start","toISOString","toLocaleDateString","formatedDate","Date","submitEditForm","put","trial","id","startDate","endDate","registrationStartDate","registrationEndDate","maxPartipants","priceInEUR","then","resp","console","log","data","getTrialJSON","setTrials","handleClose","catch","error","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport BasicDatePickers from \"./DatePicker\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from 'axios'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function EditTrialForm(props) {\n  const [name, setName] = useState();\n  const [regStartDate, setRegStartDate] = useState();\n  const [regEndDate, setRegEndDate] = useState();\n  const classes = useStyles();\n\n  const getDate = (date, start) => {\n    date.toISOString()\n    date.toLocaleDateString()\n    const formatedDate = new Date(date).toLocaleDateString('fr-CA')\n        if (start) {\n      setRegStartDate(formatedDate);\n    } else setRegEndDate(formatedDate);\n  };\n\n  const submitEditForm = () => {\n\n    axios\n    .put(`http://localhost:3000/trial/${props.trial.id}/`, {\n      id: props.trial.id,\n      name: name || props.trial.name,\n      startDate: props.trial.startDate,\n      endDate : props.trial.endDate,\n      registrationStartDate: regStartDate || props.trial.registrationStartDate,\n      registrationEndDate: regEndDate || props.trial.registrationEndDate,\n      maxPartipants: props.trial.maxPartipants,\n      priceInEUR: props.trial.priceInEUR \n    })\n    .then((resp) => {\n      console.log(resp.data);\n      props.getTrialJSON(\"http://localhost:3000/Trial\", props.setTrials)\n      props.handleClose()\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\n  return (\n    <form\n      justify=\"space-around\"\n      className={classes.root}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <Grid container justify=\"space-around\">\n        <TextField\n          id=\"standard-secondary\"\n          label={props.trial.name}\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          color=\"primary\"\n        />\n        <BasicDatePickers\n          starting={true}\n          label=\"Registration start date\"\n          trial={props.trial.registrationStartDate}\n          getDate={getDate}\n        />\n        <BasicDatePickers\n          starting={false}\n          label=\"Registration end date\"\n          trial={props.trial.registrationEndDate}\n          getDate={getDate}\n        />\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={submitEditForm}\n          >\n            Submit\n          </Button>\n        </DialogActions>\n      </Grid>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}