{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Documents/projekti2/sim-test/client/src/Components/TrialList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\n\nfunction TrialList(props) {\n  const loggedUser = props.user;\n  const [trials, setTrials] = useState([]);\n  const [enrollment, setEnrollment] = useState([]);\n  const [enrolled, setEnrolled] = useState([]);\n\n  const fetch = async (url, sets) => {\n    const result = await axios(url);\n    sets(result.data);\n  }; //Fetch trials and enrollments\n\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/Trial\", setTrials);\n    fetch(\"http://localhost:3000/Enrollment\", setEnrollment);\n  }, []); //calculate how many are enrollments \n\n  const howManyEnrolls = () => {\n    const totalCount = [];\n\n    for (let index = 0; index < enrollment.length; index++) {\n      for (let i = 0; i < totalCount.length; index++) {\n        if (totalCount[i].id === enrollment[index].id) {\n          totalCount[i].count = +1;\n        } else totalCount.push({\n          id: enrollment[index].id,\n          count: 1\n        });\n      }\n    }\n  }; //when enrollments is fetched filter enrollments that this user participate\n  //and store in @enrolled\n\n\n  useEffect(() => {\n    let enrolledTrials = [];\n\n    for (let index = 0; index < enrollment.length; index++) {\n      if (enrollment[index].userId == loggedUser) {\n        enrolledTrials.push(enrollment[index].id);\n      }\n    }\n\n    setEnrolled(enrolledTrials);\n  }, [enrollment]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, trials.map(trial => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"a\") //<Card key={trial.id} {...trial} isEnrolled={enrolled.includes(trial.id)}/>\n  ));\n}\n\nexport default TrialList;","map":{"version":3,"sources":["/home/ivan/Documents/projekti2/sim-test/client/src/Components/TrialList.js"],"names":["React","useState","useEffect","axios","Card","TrialList","props","loggedUser","user","trials","setTrials","enrollment","setEnrollment","enrolled","setEnrolled","fetch","url","sets","result","data","howManyEnrolls","totalCount","index","length","i","id","count","push","enrolledTrials","userId","map","trial"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAMC,UAAU,GAAGD,KAAK,CAACE,IAAzB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMc,KAAK,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AACjC,UAAMC,MAAM,GAAG,MAAMf,KAAK,CAACa,GAAD,CAA1B;AACAC,IAAAA,IAAI,CAACC,MAAM,CAACC,IAAR,CAAJ;AACD,GAHD,CANwB,CAWxB;;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAAC,6BAAD,EAAgCL,SAAhC,CAAL;AACAK,IAAAA,KAAK,CAAC,kCAAD,EAAqCH,aAArC,CAAL;AACD,GAHQ,EAGN,EAHM,CAAT,CAZwB,CAkBxB;;AACA,QAAMQ,cAAc,GAAG,MAAM;AAC3B,UAAMC,UAAU,GAAG,EAAnB;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGX,UAAU,CAACY,MAAvC,EAA+CD,KAAK,EAApD,EAAwD;AACpD,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,UAAU,CAACE,MAA/B,EAAuCD,KAAK,EAA5C,EAAgD;AAC9C,YAAGD,UAAU,CAACG,CAAD,CAAV,CAAcC,EAAd,KAAqBd,UAAU,CAACW,KAAD,CAAV,CAAkBG,EAA1C,EAA6C;AAC3CJ,UAAAA,UAAU,CAACG,CAAD,CAAV,CAAcE,KAAd,GAAqB,CAAE,CAAvB;AACD,SAFD,MAEML,UAAU,CAACM,IAAX,CAAgB;AAACF,UAAAA,EAAE,EAAEd,UAAU,CAACW,KAAD,CAAV,CAAkBG,EAAvB;AAA2BC,UAAAA,KAAK,EAAE;AAAlC,SAAhB;AAEP;AAEJ;AACF,GAXD,CAnBwB,CAgCxB;AACA;;;AACAxB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0B,cAAc,GAAG,EAArB;;AACA,SAAK,IAAIN,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGX,UAAU,CAACY,MAAvC,EAA+CD,KAAK,EAApD,EAAwD;AACtD,UAAIX,UAAU,CAACW,KAAD,CAAV,CAAkBO,MAAlB,IAA4BtB,UAAhC,EAA4C;AAC1CqB,QAAAA,cAAc,CAACD,IAAf,CAAoBhB,UAAU,CAACW,KAAD,CAAV,CAAkBG,EAAtC;AACD;AACF;;AACDX,IAAAA,WAAW,CAACc,cAAD,CAAX;AACD,GARQ,EAQN,CAACjB,UAAD,CARM,CAAT;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIF,MAAM,CAACqB,GAAP,CAAYC,KAAD,iBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADS,CAET;AAFF,GAFJ,CADF;AASD;;AAED,eAAe1B,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\n\nfunction TrialList(props) {\n  const loggedUser = props.user\n  const [trials, setTrials] = useState([]);\n  const [enrollment, setEnrollment] = useState([]);\n  const [enrolled, setEnrolled] = useState([]);\n\n  const fetch = async (url, sets) => {\n    const result = await axios(url);\n    sets(result.data);\n  };\n\n  //Fetch trials and enrollments\n  useEffect(() => {\n    fetch(\"http://localhost:3000/Trial\", setTrials);\n    fetch(\"http://localhost:3000/Enrollment\", setEnrollment);\n  }, []);\n\n\n  //calculate how many are enrollments \n  const howManyEnrolls = () => {\n    const totalCount = []\n    for (let index = 0; index < enrollment.length; index++) {\n        for (let i = 0; i < totalCount.length; index++) {\n          if(totalCount[i].id === enrollment[index].id){\n            totalCount[i].count =+ 1\n          }else totalCount.push({id: enrollment[index].id, count: 1})\n          \n        }\n      \n    }\n  }\n\n  //when enrollments is fetched filter enrollments that this user participate\n  //and store in @enrolled\n  useEffect(() => {\n    let enrolledTrials = [];\n    for (let index = 0; index < enrollment.length; index++) {\n      if (enrollment[index].userId == loggedUser) {\n        enrolledTrials.push(enrollment[index].id);\n      }\n    }\n    setEnrolled(enrolledTrials)\n  }, [enrollment]);\n\n\n  return (\n    <div>\n      {\n        trials.map((trial) => (\n          <p>a</p>\n          //<Card key={trial.id} {...trial} isEnrolled={enrolled.includes(trial.id)}/>\n          ))}\n    </div>\n  );\n}\n\nexport default TrialList;\n"]},"metadata":{},"sourceType":"module"}