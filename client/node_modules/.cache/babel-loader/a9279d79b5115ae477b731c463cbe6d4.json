{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Documents/projekti2/sim-test/client/src/Components/TrialList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\n\nfunction TrialList(props) {\n  const loggedUser = props.user;\n  const [trials, setTrials] = useState([]);\n  const [enrollment, setEnrollment] = useState([]);\n  const [enrolled, setEnrolled] = useState([]);\n\n  const fetch = async (url, sets) => {\n    const result = await axios(url);\n    sets(result.data);\n  }; //Fetch trials and enrollments\n\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/Trial\", setTrials);\n    fetch(\"http://localhost:3000/Enrollment\", setEnrollment);\n  }, []); //when enrollments is fetched filter enrollments that this user participate\n  //and store in @enrolled\n\n  useEffect(() => {\n    let enrolledTrials = [];\n\n    for (let index = 0; index < enrollment.length; index++) {\n      if (enrollment[index].userId == loggedUser) {\n        enrolledTrials.push(enrollment[index]);\n      }\n    }\n\n    setEnrolled(enrolledTrials);\n  }, [enrollment]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, trials.map(trial => console.log(\"asd\") // <Card key={trial.id} {...trial} isEnrolled={true}/>\n  ));\n}\n\nexport default TrialList;","map":{"version":3,"sources":["/home/ivan/Documents/projekti2/sim-test/client/src/Components/TrialList.js"],"names":["React","useState","useEffect","axios","Card","TrialList","props","loggedUser","user","trials","setTrials","enrollment","setEnrollment","enrolled","setEnrolled","fetch","url","sets","result","data","enrolledTrials","index","length","userId","push","map","trial","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAMC,UAAU,GAAGD,KAAK,CAACE,IAAzB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMc,KAAK,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AACjC,UAAMC,MAAM,GAAG,MAAMf,KAAK,CAACa,GAAD,CAA1B;AACAC,IAAAA,IAAI,CAACC,MAAM,CAACC,IAAR,CAAJ;AACD,GAHD,CANwB,CAWxB;;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAAC,6BAAD,EAAgCL,SAAhC,CAAL;AACAK,IAAAA,KAAK,CAAC,kCAAD,EAAqCH,aAArC,CAAL;AACD,GAHQ,EAGN,EAHM,CAAT,CAZwB,CAkBxB;AACA;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,cAAc,GAAG,EAArB;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGV,UAAU,CAACW,MAAvC,EAA+CD,KAAK,EAApD,EAAwD;AACtD,UAAIV,UAAU,CAACU,KAAD,CAAV,CAAkBE,MAAlB,IAA4BhB,UAAhC,EAA4C;AAC1Ca,QAAAA,cAAc,CAACI,IAAf,CAAoBb,UAAU,CAACU,KAAD,CAA9B;AACD;AACF;;AACDP,IAAAA,WAAW,CAACM,cAAD,CAAX;AACD,GARQ,EAQN,CAACT,UAAD,CARM,CAAT;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIF,MAAM,CAACgB,GAAP,CAAYC,KAAD,IACTC,OAAO,CAACC,GAAR,CAAY,KAAZ,CADS,CAET;AAFF,GAFJ,CADF;AASD;;AAED,eAAevB,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\n\nfunction TrialList(props) {\n  const loggedUser = props.user\n  const [trials, setTrials] = useState([]);\n  const [enrollment, setEnrollment] = useState([]);\n  const [enrolled, setEnrolled] = useState([]);\n\n  const fetch = async (url, sets) => {\n    const result = await axios(url);\n    sets(result.data);\n  };\n\n  //Fetch trials and enrollments\n  useEffect(() => {\n    fetch(\"http://localhost:3000/Trial\", setTrials);\n    fetch(\"http://localhost:3000/Enrollment\", setEnrollment);\n  }, []);\n\n\n  //when enrollments is fetched filter enrollments that this user participate\n  //and store in @enrolled\n  useEffect(() => {\n    let enrolledTrials = [];\n    for (let index = 0; index < enrollment.length; index++) {\n      if (enrollment[index].userId == loggedUser) {\n        enrolledTrials.push(enrollment[index]);\n      }\n    }\n    setEnrolled(enrolledTrials)\n  }, [enrollment]);\n\n\n  return (\n    <div>\n      {\n        trials.map((trial) => (\n          console.log(\"asd\")\n          // <Card key={trial.id} {...trial} isEnrolled={true}/>\n          ))}\n    </div>\n  );\n}\n\nexport default TrialList;\n"]},"metadata":{},"sourceType":"module"}