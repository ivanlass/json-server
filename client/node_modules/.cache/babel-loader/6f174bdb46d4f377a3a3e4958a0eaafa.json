{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios'; // const useFetch =(url) => {\n//     const fetch = async () => {\n//       const result = await axios(url);\n//       return result.data\n//     };\n//   };\n// const useFetch = (url, options) => {\n//     const [response, setResponse] = useState(null);\n//     const [error, setError] = useState(null);\n//     useEffect(() => {\n//       const fetchData = async () => {\n//         try {\n//           const res = await fetch(url, options);\n//           const json = await res.json();\n//           setResponse(json);\n//         } catch (error) {\n//           setError(error);\n//         }\n//       };\n//       fetchData();\n//     }, []);\n//     return { response, error };\n//   };\n\nconst useFetch = url => {\n  const [response, setResponse] = useState(null);\n  useEffect(() => {\n    const fetch = async () => {\n      const result = await axios(url);\n      return setResponse(result.data);\n    };\n\n    fetch();\n  }, []);\n  return [response, setResponse];\n};\n\nexport default useFetch;","map":{"version":3,"sources":["/home/ivan/Documents/projekti2/sim-test/client/src/hooks/useFetch.js"],"names":["useState","useEffect","axios","useFetch","url","response","setResponse","fetch","result","data"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAChB,UAAMM,KAAK,GAAG,YAAY;AACxB,YAAMC,MAAM,GAAG,MAAMN,KAAK,CAACE,GAAD,CAA1B;AACA,aAAOE,WAAW,CAACE,MAAM,CAACC,IAAR,CAAlB;AACD,KAHD;;AAIEF,IAAAA,KAAK;AACN,GANQ,EAMP,EANO,CAAT;AAQA,SAAO,CAACF,QAAD,EAAWC,WAAX,CAAP;AACD,CAZH;;AAeE,eAAeH,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\n// const useFetch =(url) => {\n//     const fetch = async () => {\n//       const result = await axios(url);\n//       return result.data\n//     };\n\n//   };\n\n\n// const useFetch = (url, options) => {\n//     const [response, setResponse] = useState(null);\n//     const [error, setError] = useState(null);\n//     useEffect(() => {\n//       const fetchData = async () => {\n//         try {\n//           const res = await fetch(url, options);\n//           const json = await res.json();\n//           setResponse(json);\n//         } catch (error) {\n//           setError(error);\n//         }\n//       };\n//       fetchData();\n//     }, []);\n//     return { response, error };\n//   };\n\n\nconst useFetch = (url) => {\n    const [response, setResponse] = useState(null);\n\n    useEffect(() => {\n    const fetch = async () => {\n      const result = await axios(url);\n      return setResponse(result.data)\n    };\n      fetch();\n    },[])\n\n    return [response, setResponse];\n  };\n\n\n  export default useFetch\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}