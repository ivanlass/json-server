{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Documents/projekti2/sim-test/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Login from \"./Views/Login\";\nimport Admin from \"./Views/Admin\";\nimport User from \"./Views/User\";\n\nfunction App() {\n  const [roleMapping, setRoleMapping] = useState({});\n  const [users, setUsers] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [loggedUser, setLoggedUser] = useState({});\n  const [whoIsLogged, setWhoIsLogged] = useState(0);\n\n  const fetch = async (url, sets) => {\n    const result = await axios(url);\n    sets(result.data);\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/roleMapping\", setRoleMapping);\n  }, []);\n  useEffect(() => {\n    checkUser();\n  }, [users]);\n\n  const submit = async e => {\n    e.preventDefault();\n    setUserInput(e.target.dataset.value);\n    fetch(\"http://localhost:3000/user\", setUsers);\n  }; //checking if user exist and parsing the role\n\n\n  const checkUser = () => {\n    users.map(user => {\n      if (user.email === userInput) {\n        setLoggedUser(user);\n        checkRole(user.id);\n      }\n    });\n  }; //check which role is that user\n\n\n  const checkRole = user => {\n    roleMapping.map(users => {\n      if (users.userId === user) {\n        return setWhoIsLogged(users.roleId);\n      }\n    });\n  }; //based on whoislogged int it will render view\n\n\n  let view;\n\n  if (whoIsLogged === 0) {\n    view = /*#__PURE__*/React.createElement(Login, {\n      submit: submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    });\n  } else if (whoIsLogged === 1) {\n    view = /*#__PURE__*/React.createElement(Admin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    });\n  } else if (whoIsLogged === 2 || 3) {\n    view = /*#__PURE__*/React.createElement(User, {\n      user: loggedUser.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  }, view);\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ivan/Documents/projekti2/sim-test/client/src/App.js"],"names":["React","useState","useEffect","axios","Login","Admin","User","App","roleMapping","setRoleMapping","users","setUsers","userInput","setUserInput","loggedUser","setLoggedUser","whoIsLogged","setWhoIsLogged","fetch","url","sets","result","data","checkUser","submit","e","preventDefault","target","dataset","value","map","user","email","checkRole","id","userId","roleId","view"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Login from \"./Views/Login\";\nimport Admin from \"./Views/Admin\";\nimport User from \"./Views/User\";\n\nfunction App() {\n  const [roleMapping, setRoleMapping] = useState({});\n  const [users, setUsers] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [loggedUser, setLoggedUser] = useState({})\n  const [whoIsLogged, setWhoIsLogged] = useState(0);\n\n  const fetch = async (url, sets) => {\n    const result = await axios(url);\n    sets(result.data);\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/roleMapping\", setRoleMapping);\n  }, []);\n\n  useEffect(() => {\n    checkUser()\n  }, [users]);\n\n  const submit = async (e) => {\n    e.preventDefault();\n    setUserInput(e.target.dataset.value)\n    fetch(\"http://localhost:3000/user\", setUsers)\n    \n  };\n\n\n  //checking if user exist and parsing the role\n  const checkUser = () => {\n    users.map(user => {\n      if(user.email === userInput){\n       setLoggedUser(user)\n       checkRole(user.id)\n      }\n    }\n    )\n  }\n  \n  //check which role is that user\n  const checkRole = user => {\n    roleMapping.map(users => {\n      if(users.userId === user){\n        return setWhoIsLogged(users.roleId)\n      }\n    })\n  }\n\n  //based on whoislogged int it will render view\n  let view;\n  if (whoIsLogged === 0) {\n    view = <Login submit={submit} />;\n  } else if (whoIsLogged === 1 ) {\n    view = <Admin />;\n  } else if (whoIsLogged === 2||3){\n    view = <User user={loggedUser.id}/>\n  };\n\n  return <div className=\"App\">\n        {view}\n    </div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}