{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios'; // const useFetch =(url) => {\n//     const fetch = async () => {\n//       const result = await axios(url);\n//       return result.data\n//     };\n//   };\n\nconst useFetch = (url, options) => {\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(url, options);\n        const json = await res.json();\n        setResponse(json);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return {\n    response,\n    error\n  };\n};\n\nexport default useFetch;","map":{"version":3,"sources":["/home/ivan/Documents/projekti2/sim-test/client/src/hooks/useFetch.js"],"names":["useState","useEffect","axios","useFetch","url","options","response","setResponse","error","setError","fetchData","res","fetch","json"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;AACA;AACA;AACA;AACA;AAEA;;AAGA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMC,KAAK,CAACR,GAAD,EAAMC,OAAN,CAAvB;AACA,cAAMQ,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACAN,QAAAA,WAAW,CAACM,IAAD,CAAX;AACD,OAJD,CAIE,OAAOL,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,KARD;;AASAE,IAAAA,SAAS;AACV,GAXQ,EAWN,EAXM,CAAT;AAYA,SAAO;AAAEJ,IAAAA,QAAF;AAAYE,IAAAA;AAAZ,GAAP;AACD,CAhBH;;AAkBE,eAAeL,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\n// const useFetch =(url) => {\n//     const fetch = async () => {\n//       const result = await axios(url);\n//       return result.data\n//     };\n\n//   };\n\n\nconst useFetch = (url, options) => {\n    const [response, setResponse] = useState(null);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const res = await fetch(url, options);\n          const json = await res.json();\n          setResponse(json);\n        } catch (error) {\n          setError(error);\n        }\n      };\n      fetchData();\n    }, []);\n    return { response, error };\n  };\n\n  export default useFetch\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}