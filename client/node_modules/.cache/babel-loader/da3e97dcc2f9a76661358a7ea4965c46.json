{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Documents/projekti2/sim-test/client/src/Components/TrialList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\n\nfunction TrialList(props) {\n  const loggedUser = props.user;\n  const [trials, setTrials] = useState([]);\n  const [enrollment, setEnrollment] = useState([]);\n  const [enrolled, setEnrolled] = useState([]);\n  const [howManyEnrolled, setHowManyEnrolled] = useState([]);\n\n  const fetch = async (url, sets) => {\n    const result = await axios(url);\n    sets(result.data);\n  }; //Fetch trials and enrollments\n\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/Trial\", setTrials);\n    fetch(\"http://localhost:3000/Enrollment\", setEnrollment);\n  }, []); //  calculate how many are enrollments \n\n  useEffect(() => {\n    const totalCount = [1, 2, 3];\n    console.log(enrollment);\n\n    for (let index = 0; index < enrollment.length - 500; index++) {\n      for (let i = 0; i < totalCount.length; i++) {\n        if (totalCount[i].id === enrollment[index].trialId) {\n          totalCount[i].count = totalCount[i].count + 1;\n        } else totalCount.push({\n          id: enrollment[index].trialId,\n          count: 1\n        });\n      }\n    }\n\n    setHowManyEnrolled(totalCount);\n  }, [enrollment]); //when enrollments is fetched filter enrollments that this user participate\n  //and store in @enrolled\n\n  useEffect(() => {\n    let enrolledTrials = [];\n\n    for (let index = 0; index < enrollment.length; index++) {\n      if (enrollment[index].userId === loggedUser) {\n        enrolledTrials.push(enrollment[index].id);\n      }\n    }\n\n    setEnrolled(enrolledTrials);\n  }, [enrollment]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, trials.map(trial => /*#__PURE__*/React.createElement(Card, Object.assign({\n    key: trial.id\n  }, trial, {\n    isEnrolled: enrolled.includes(trial.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default TrialList;","map":{"version":3,"sources":["/home/ivan/Documents/projekti2/sim-test/client/src/Components/TrialList.js"],"names":["React","useState","useEffect","axios","Card","TrialList","props","loggedUser","user","trials","setTrials","enrollment","setEnrollment","enrolled","setEnrolled","howManyEnrolled","setHowManyEnrolled","fetch","url","sets","result","data","totalCount","console","log","index","length","i","id","trialId","count","push","enrolledTrials","userId","map","trial","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAMC,UAAU,GAAGD,KAAK,CAACE,IAAzB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAC,EAAD,CAAtD;;AAEA,QAAMgB,KAAK,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AACjC,UAAMC,MAAM,GAAG,MAAMjB,KAAK,CAACe,GAAD,CAA1B;AACAC,IAAAA,IAAI,CAACC,MAAM,CAACC,IAAR,CAAJ;AACD,GAHD,CAPwB,CAYxB;;;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,KAAK,CAAC,6BAAD,EAAgCP,SAAhC,CAAL;AACAO,IAAAA,KAAK,CAAC,kCAAD,EAAqCL,aAArC,CAAL;AACD,GAHQ,EAGN,EAHM,CAAT,CAbwB,CAmB1B;;AACEV,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMoB,UAAU,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,UAAZ;;AACA,SAAK,IAAIc,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGd,UAAU,CAACe,MAAX,GAAkB,GAA9C,EAAmDD,KAAK,EAAxD,EAA4D;AAC1D,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,UAAU,CAACI,MAA/B,EAAuCC,CAAC,EAAxC,EAA4C;AAC1C,YAAGL,UAAU,CAACK,CAAD,CAAV,CAAcC,EAAd,KAAqBjB,UAAU,CAACc,KAAD,CAAV,CAAkBI,OAA1C,EAAkD;AAChDP,UAAAA,UAAU,CAACK,CAAD,CAAV,CAAcG,KAAd,GAAqBR,UAAU,CAACK,CAAD,CAAV,CAAcG,KAAd,GAAsB,CAA3C;AACD,SAFD,MAEMR,UAAU,CAACS,IAAX,CAAgB;AAACH,UAAAA,EAAE,EAAEjB,UAAU,CAACc,KAAD,CAAV,CAAkBI,OAAvB;AAAgCC,UAAAA,KAAK,EAAE;AAAvC,SAAhB;AACP;AACF;;AACDd,IAAAA,kBAAkB,CAACM,UAAD,CAAlB;AACH,GAXQ,EAWN,CAACX,UAAD,CAXM,CAAT,CApBwB,CAkCxB;AACA;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI8B,cAAc,GAAG,EAArB;;AACA,SAAK,IAAIP,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGd,UAAU,CAACe,MAAvC,EAA+CD,KAAK,EAApD,EAAwD;AACtD,UAAId,UAAU,CAACc,KAAD,CAAV,CAAkBQ,MAAlB,KAA6B1B,UAAjC,EAA6C;AAC3CyB,QAAAA,cAAc,CAACD,IAAf,CAAoBpB,UAAU,CAACc,KAAD,CAAV,CAAkBG,EAAtC;AACD;AACF;;AACDd,IAAAA,WAAW,CAACkB,cAAD,CAAX;AACD,GARQ,EAQN,CAACrB,UAAD,CARM,CAAT;AAUA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIF,MAAM,CAACyB,GAAP,CAAYC,KAAD,iBACT,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAK,CAACP;AAAjB,KAAyBO,KAAzB;AAAgC,IAAA,UAAU,EAAEtB,QAAQ,CAACuB,QAAT,CAAkBD,KAAK,CAACP,EAAxB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAFJ,CADF;AAQD;;AAED,eAAevB,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\n\nfunction TrialList(props) {\n  const loggedUser = props.user\n  const [trials, setTrials] = useState([]);\n  const [enrollment, setEnrollment] = useState([]);\n  const [enrolled, setEnrolled] = useState([]);\n  const [howManyEnrolled, setHowManyEnrolled] = useState([]);\n\n  const fetch = async (url, sets) => {\n    const result = await axios(url);\n    sets(result.data);\n  };\n\n  //Fetch trials and enrollments\n  useEffect(() => {\n    fetch(\"http://localhost:3000/Trial\", setTrials);\n    fetch(\"http://localhost:3000/Enrollment\", setEnrollment);\n  }, []);\n\n\n//  calculate how many are enrollments \n  useEffect(() => {\n      const totalCount = [1,2,3]\n      console.log(enrollment)\n      for (let index = 0; index < enrollment.length-500; index++) {\n        for (let i = 0; i < totalCount.length; i++) {\n          if(totalCount[i].id === enrollment[index].trialId){\n            totalCount[i].count =totalCount[i].count + 1\n          }else totalCount.push({id: enrollment[index].trialId, count: 1}) \n        }\n      }\n      setHowManyEnrolled(totalCount)\n  }, [enrollment]);\n\n\n  //when enrollments is fetched filter enrollments that this user participate\n  //and store in @enrolled\n  useEffect(() => {\n    let enrolledTrials = [];\n    for (let index = 0; index < enrollment.length; index++) {\n      if (enrollment[index].userId === loggedUser) {\n        enrolledTrials.push(enrollment[index].id);\n      }\n    }\n    setEnrolled(enrolledTrials)\n  }, [enrollment]);\n  \n  return (\n    <div>\n      {\n        trials.map((trial) => (\n          <Card key={trial.id} {...trial} isEnrolled={enrolled.includes(trial.id)}/>\n          ))}\n    </div>\n  );\n}\n\nexport default TrialList;\n"]},"metadata":{},"sourceType":"module"}