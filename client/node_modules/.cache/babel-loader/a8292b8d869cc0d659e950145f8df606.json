{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Documents/projekti2/sim-test/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Login from \"./Views/Login\";\nimport Admin from \"./Views/Admin\";\nimport User from \"./Views/User\";\n\nfunction App() {\n  const [roleMapping, setRoleMapping] = useState({});\n  const [role, setRole] = useState({});\n  const [users, setUsers] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [loggedUser, setLoggedUser] = useState({});\n  const [whoIsLogged, setWhoIsLogged] = useState(0);\n\n  const fetch = async (url, sets) => {\n    const result = await axios(url);\n    sets(result.data);\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/role\", setRole);\n    fetch(\"http://localhost:3000/roleMapping\", setRoleMapping);\n  }, []);\n  useEffect(() => {\n    checkUser();\n  }, [users]);\n\n  const submit = async e => {\n    e.preventDefault();\n    setUserInput(e.target.dataset.value);\n    fetch(\"http://localhost:3000/user\", setUsers);\n  }; //checking if user exist and parsing the role\n\n\n  const checkUser = () => {\n    users.map(user => {\n      if (user.email === userInput) {\n        setLoggedUser(user);\n        checkRole(user.id);\n      }\n    });\n  }; //check wich role is that user\n\n\n  const checkRole = user => {\n    roleMapping.map(users => {\n      if (users.userId === user) {\n        setWhoIsLogged(users.roleId);\n      }\n    });\n  }; // based on whoislogged int it will render view\n  // let view;\n  // if (whoIsLogged === 0) {\n  //   view = <Login submit={submit} />;\n  // } else if (whoIsLogged === 1) {\n  //   view = <Admin />;\n  // } else view = <User user={loggedUser}/>;\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }\n  }, whoIsLogged === 0 && /*#__PURE__*/React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 27\n    }\n  }) || whoIsLogged === 1 && /*#__PURE__*/React.createElement(Admin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 28\n    }\n  }) || whoIsLogged === 2 && /*#__PURE__*/React.createElement(User, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 28\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ivan/Documents/projekti2/sim-test/client/src/App.js"],"names":["React","useState","useEffect","axios","Login","Admin","User","App","roleMapping","setRoleMapping","role","setRole","users","setUsers","userInput","setUserInput","loggedUser","setLoggedUser","whoIsLogged","setWhoIsLogged","fetch","url","sets","result","data","checkUser","submit","e","preventDefault","target","dataset","value","map","user","email","checkRole","id","userId","roleId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,CAAD,CAA9C;;AAEA,QAAMmB,KAAK,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AACjC,UAAMC,MAAM,GAAG,MAAMpB,KAAK,CAACkB,GAAD,CAA1B;AACAC,IAAAA,IAAI,CAACC,MAAM,CAACC,IAAR,CAAJ;AACD,GAHD;;AAKAtB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,KAAK,CAAC,4BAAD,EAA+BT,OAA/B,CAAL;AACAS,IAAAA,KAAK,CAAC,mCAAD,EAAsCX,cAAtC,CAAL;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACb,KAAD,CAFM,CAAT;;AAIA,QAAMc,MAAM,GAAG,MAAOC,CAAP,IAAa;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAb,IAAAA,YAAY,CAACY,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiBC,KAAlB,CAAZ;AACAX,IAAAA,KAAK,CAAC,4BAAD,EAA+BP,QAA/B,CAAL;AAED,GALD,CAtBa,CA8Bb;;;AACA,QAAMY,SAAS,GAAG,MAAM;AACtBb,IAAAA,KAAK,CAACoB,GAAN,CAAUC,IAAI,IAAI;AAChB,UAAGA,IAAI,CAACC,KAAL,KAAepB,SAAlB,EAA4B;AAC3BG,QAAAA,aAAa,CAACgB,IAAD,CAAb;AACAE,QAAAA,SAAS,CAACF,IAAI,CAACG,EAAN,CAAT;AACA;AACF,KALD;AAOD,GARD,CA/Ba,CAyCb;;;AACA,QAAMD,SAAS,GAAGF,IAAI,IAAI;AACxBzB,IAAAA,WAAW,CAACwB,GAAZ,CAAgBpB,KAAK,IAAI;AACvB,UAAGA,KAAK,CAACyB,MAAN,KAAiBJ,IAApB,EAAyB;AACvBd,QAAAA,cAAc,CAACP,KAAK,CAAC0B,MAAP,CAAd;AACD;AACF,KAJD;AAKD,GAND,CA1Ca,CAkDb;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJpB,WAAW,KAAK,CAAhB,iBAAqB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,IACCA,WAAW,KAAK,CAAhB,iBAAqB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtB,IAECA,WAAW,KAAK,CAAhB,iBAAqB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHlB,CAAP;AAMD;;AAED,eAAeX,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nimport Login from \"./Views/Login\";\nimport Admin from \"./Views/Admin\";\nimport User from \"./Views/User\";\n\nfunction App() {\n  const [roleMapping, setRoleMapping] = useState({});\n  const [role, setRole] = useState({});\n  const [users, setUsers] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [loggedUser, setLoggedUser] = useState({})\n  const [whoIsLogged, setWhoIsLogged] = useState(0);\n\n  const fetch = async (url, sets) => {\n    const result = await axios(url);\n    sets(result.data);\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/role\", setRole);\n    fetch(\"http://localhost:3000/roleMapping\", setRoleMapping);\n  }, []);\n\n  useEffect(() => {\n    checkUser()\n  }, [users]);\n\n  const submit = async (e) => {\n    e.preventDefault();\n    setUserInput(e.target.dataset.value)\n    fetch(\"http://localhost:3000/user\", setUsers)\n    \n  };\n\n\n  //checking if user exist and parsing the role\n  const checkUser = () => {\n    users.map(user => {\n      if(user.email === userInput){\n       setLoggedUser(user)\n       checkRole(user.id)\n      }\n    }\n    )\n  }\n\n  //check wich role is that user\n  const checkRole = user => {\n    roleMapping.map(users => {\n      if(users.userId === user){\n        setWhoIsLogged(users.roleId)\n      }\n    })\n  }\n\n  // based on whoislogged int it will render view\n  // let view;\n  // if (whoIsLogged === 0) {\n  //   view = <Login submit={submit} />;\n  // } else if (whoIsLogged === 1) {\n  //   view = <Admin />;\n  // } else view = <User user={loggedUser}/>;\n\n  return <div className=\"App\">\n    {whoIsLogged === 0 && <Login /> ||\n      whoIsLogged === 1 && <Admin /> ||\n      whoIsLogged === 2 && <User />}\n    \n    </div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}