{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Documents/projekti2/sim-test/client/src/Components/EditTrialForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport BasicDatePickers from \"./DatePicker\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport default function EditTrialForm(props) {\n  const [name, setName] = useState();\n  const [regStartDate, setRegStartDate] = useState();\n  const [regEndDate, setRegEndDate] = useState();\n  const classes = useStyles();\n\n  const getDate = (date, start) => {\n    date.toISOString();\n    date.toLocaleDateString();\n    const formatedDate = new Date(date).toLocaleDateString('fr-CA');\n    console.log(formatedDate);\n\n    if (start) {\n      setRegStartDate(formatedDate);\n    } else setRegEndDate(formatedDate);\n  };\n\n  const submitEditForm = () => {\n    const trialForSubmit = {\n      id: props.trial.id,\n      name: name || props.trial.name,\n      startDate: props.trial.startDate,\n      endDate: props.trial.endDate,\n      registrationStartDate: regStartDate || props.trial.registrationStartDate,\n      registrationEndDate: regEndDate || props.trial.registrationEndDate,\n      maxPartipants: props.trial.maxPartipants,\n      priceInEUR: props.trial.priceInEUR\n    }; //console.log(trialForSubmit.registrationStartDate)\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    justify: \"space-around\",\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-secondary\",\n    label: props.trial.name,\n    value: name,\n    onChange: e => setName(e.target.value),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BasicDatePickers, {\n    start: true,\n    label: \"Registration start date\",\n    trial: props.trial.registrationStartDate,\n    getDate: getDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BasicDatePickers, {\n    start: false,\n    label: \"Registration end date\",\n    trial: props.trial.registrationEndDate,\n    getDate: getDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: props.handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: props.handleClose,\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: submitEditForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["/home/ivan/Documents/projekti2/sim-test/client/src/Components/EditTrialForm.js"],"names":["React","useState","useEffect","makeStyles","TextField","BasicDatePickers","Grid","DialogActions","Button","useStyles","theme","root","margin","spacing","EditTrialForm","props","name","setName","regStartDate","setRegStartDate","regEndDate","setRegEndDate","classes","getDate","date","start","toISOString","toLocaleDateString","formatedDate","Date","console","log","submitEditForm","trialForSubmit","id","trial","startDate","endDate","registrationStartDate","registrationEndDate","maxPartipants","priceInEUR","e","target","value","handleClose"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport BasicDatePickers from \"./DatePicker\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function EditTrialForm(props) {\n  const [name, setName] = useState();\n  const [regStartDate, setRegStartDate] = useState();\n  const [regEndDate, setRegEndDate] = useState();\n  const classes = useStyles();\n\n  const getDate = (date, start) => {\n    date.toISOString()\n    date.toLocaleDateString()\n    const formatedDate = new Date(date).toLocaleDateString('fr-CA')\n    console.log(formatedDate)\n        if (start) {\n      setRegStartDate(formatedDate);\n    } else setRegEndDate(formatedDate);\n  };\n\n  const submitEditForm = () => {\n    const trialForSubmit = {\n        id: props.trial.id,\n        name: name || props.trial.name,\n        startDate: props.trial.startDate,\n        endDate : props.trial.endDate,\n        registrationStartDate: regStartDate || props.trial.registrationStartDate,\n        registrationEndDate: regEndDate || props.trial.registrationEndDate,\n        maxPartipants: props.trial.maxPartipants,\n        priceInEUR: props.trial.priceInEUR \n    }\n    //console.log(trialForSubmit.registrationStartDate)\n};\n\n  return (\n    <form\n      justify=\"space-around\"\n      className={classes.root}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <Grid container justify=\"space-around\">\n        <TextField\n          id=\"standard-secondary\"\n          label={props.trial.name}\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          color=\"primary\"\n        />\n        <BasicDatePickers\n          start={true}\n          label=\"Registration start date\"\n          trial={props.trial.registrationStartDate}\n          getDate={getDate}\n        />\n        <BasicDatePickers\n          start={false}\n          label=\"Registration end date\"\n          trial={props.trial.registrationEndDate}\n          getDate={getDate}\n        />\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={props.handleClose}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={submitEditForm}\n          >\n            Submit\n          </Button>\n        </DialogActions>\n      </Grid>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}